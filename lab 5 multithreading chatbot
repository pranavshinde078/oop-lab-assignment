class ChatUser extends Thread {
    private String name;
    private String[] messages;

    ChatUser(String name, String[] messages) {
        this.name = name;
        this.messages = messages;
    }

    public void run() {
        try {
            for (String msg : messages) {
                System.out.println(name + " says: " + msg);
                Thread.sleep(1000); // simulate typing delay
            }
        } catch (InterruptedException e) {
            System.out.println(name + " was interrupted.");
        }
    }
}

public class ChatSystem {
    @SuppressWarnings("deprecation") // for suspend/resume/stop
    public static void main(String[] args) {
        String[] msgs1 = {"Hello!", "How are you?", "I am fine."};
        String[] msgs2 = {"Hey!", "I'm good, thanks!", "What about you?"};
        String[] msgs3 = {"Hi both!", "Urgent: Meeting at 5 PM."};

        ChatUser user1 = new ChatUser("User1", msgs1);
        ChatUser user2 = new ChatUser("User2", msgs2);
        ChatUser user3 = new ChatUser("Admin", msgs3);

        // Set priorities
        user1.setPriority(Thread.NORM_PRIORITY); // normal
        user2.setPriority(Thread.NORM_PRIORITY); // normal
        user3.setPriority(Thread.MAX_PRIORITY);  // urgent messages

        // Start threads
        user1.start();
        user2.start();
        user3.start();

        // Check if threads are alive
        System.out.println("User1 alive? " + user1.isAlive());
        System.out.println("User2 alive? " + user2.isAlive());
        System.out.println("Admin alive? " + user3.isAlive());

        // Synchronization with join
        try {
            user1.join();
            user2.join();
            user3.join();
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

        // Demonstrating suspend, resume, stop (not recommended in real apps)
        try {
            System.out.println("\n--- Demonstrating suspend/resume/stop ---");
            ChatUser demo = new ChatUser("DemoUser", new String[]{"Msg1", "Msg2", "Msg3"});
            demo.start();

            Thread.sleep(1500);
            demo.suspend(); // suspend
            System.out.println("DemoUser suspended...");

            Thread.sleep(2000);
            demo.resume(); // resume
            System.out.println("DemoUser resumed...");

            Thread.sleep(2000);
            demo.stop(); // stop
            System.out.println("DemoUser stopped...");
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

        System.out.println("\nAll chats finished!");
    }
}
